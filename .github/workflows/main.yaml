name: 'build'

on:
  push:
    branches:
      - 'master'

env:
  extensions: 'json'
  cache-version: '1'
  composer-version: 'v1'
  composer-install: 'composer update --no-interaction --no-progress --no-suggest --prefer-dist --prefer-stable'

jobs:
  coding_style:
    name: 'Coding style'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'PHP setup'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: 'none'

      - name: 'Coding style'
        shell: bash
        run: bin/cs

  php_stan:
    name: 'PHP Stan'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'PHP setup'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: 'none'

      - name: 'PHP Stan'
        shell: bash
        run: bin/stan

  tests:
    name: 'Tests'
    runs-on: '${{ matrix.operating-system }}'

    strategy:
      matrix:
        php-version: [ '7.1', '7.2', '7.3', '7.4', '8.0' ]
        operating-system: [ 'ubuntu-latest' ]
        composer-args: [ '' ]
        include:
          - php-version: '7.1'
            operating-system: 'ubuntu-latest'
            composer-args: '--prefer-lowest'
      fail-fast: false

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'

      - name: 'Setup PHP cache environment'
        id: 'extcache'
        uses: 'shivammathur/cache-extensions@v1'
        with:
          php-version: '${{ matrix.php-version }}'
          extensions: '${{ env.extensions }}'
          key: '${{ env.cache-version }}'

      - name: 'Cache PHP extensions'
        uses: 'actions/cache@v2'
        with:
          path: '${{ steps.extcache.outputs.dir }}'
          key: '${{ steps.extcache.outputs.key }}'
          restore-keys: '${{ steps.extcache.outputs.key }}'

      - name: 'Install PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '${{ matrix.php-version }}'
          extensions: '${{ env.extensions }}'
          tools: 'composer:${{ env.composer-version }}'

      - name: 'Setup problem matchers for PHP'
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: 'Get Composer cache directory'
        id: 'composercache'
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: 'Cache PHP dependencies'
        uses: 'actions/cache@v2'
        with:
          path: '${{ steps.composercache.outputs.dir }}'
          key: '${{ runner.os }}-composer-${{ hashFiles("**/composer.json") }}'
          restore-keys: '${{ runner.os }}-composer-'

      - name: 'Install dependencies'
        run: '${{ env.composer-install }} ${{ matrix.composer-args }}'

      - name: 'Setup problem matchers for PHPUnit'
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"'

      - name: 'Tests'
        run: |
          vendor/bin/tester tests -c tests/php.ini --coverage coverage.xml --coverage-src src
          bash <(curl -s https://codecov.io/bash) -t ac780c13-20d5-4325-b8bc-e6f6f8c33c95
